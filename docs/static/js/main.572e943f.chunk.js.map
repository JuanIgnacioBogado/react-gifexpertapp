{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","GifGridItem","className","src","alt","GifGrid","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAqCeA,EAlCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAELC,mBAAS,IAFJ,mBAElCC,EAFkC,KAEtBC,EAFsB,KAiBzC,OACE,oCACE,0BAAMC,SAXW,SAAAC,GACnBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAQZ,2BACEO,KAAK,OACLC,MAAOT,EACPU,SAnBkB,SAAAP,GACxBF,EAAcE,EAAEQ,OAAOF,a,uBCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACT,mCACNC,EAFe,iDAEkCC,UAAUH,GAF5C,6BACT,oCADS,SAGFI,MAAMF,GAHJ,cAGfG,EAHe,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAG,MAAK,CAC5BC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATd,kBAYdM,GAZc,4CAAH,sDCgBLO,EAdM,SAACf,GAAc,IAAD,EACPd,mBAAS,CACjCqB,KAAM,GACNS,SAAS,IAHsB,mBAC1BC,EAD0B,KACnBC,EADmB,KAWjC,OALAC,qBAAU,WACRpB,EAAQC,GACPoB,MAAK,SAAAb,GAAI,OAAIW,EAAS,CAAEX,OAAMS,SAAS,SACvC,CAAChB,IAEGiB,GCFMI,EAVK,SAAC,GAAoB,IAAlBT,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAE5B,OACE,yBAAKoB,UAAU,0CACb,yBAAKC,IAAKrB,EAAKsB,IAAKZ,IACpB,2BAAIA,KCkBKa,EArBC,SAAC,GAAkB,IAAhBzB,EAAe,EAAfA,SAAe,EAECe,EAAaf,GAAjCa,EAFmB,EAExBN,KAAaS,EAFW,EAEXA,QAErB,OACE,oCACE,4BAAKhB,GAEHgB,GAAW,sCAEb,yBAAKM,UAAU,aAETT,EAAOJ,KAAI,SAAAC,GAAG,OACZ,kBAAC,EAAD,eAAagB,IAAKhB,EAAIC,IAAQD,UCQ7BiB,EArBM,WAAO,IAAD,EAEWzC,mBAAS,CAAC,kBAFrB,mBAElB0C,EAFkB,KAEN3C,EAFM,KAIzB,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEI2C,EAAWnB,KAAI,SAAAT,GAAQ,OACrB,kBAAC,EAAD,CAAS0B,IAAK1B,EAAUA,SAAUA,UCZ9C6B,IAASC,OAAQ,kBAAC,EAAD,MAAiBC,SAASC,eAAe,U","file":"static/js/main.572e943f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = e => {\r\n    setInputValue(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if(inputValue.trim().length > 2) {\r\n      setCategories(cats => [inputValue, ...cats])\r\n      setInputValue('');\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <input \r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={handleInputChange}\r\n        />\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddCategory\r\n","\r\nexport const getGifs = async (category) => {\r\n  const key = 'qMUU5g4MSg4kxEjTvdK3qM6zNYC3clH5';\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=${key}`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map(img => ({\r\n    id: img.id,\r\n    title: img.title,\r\n    url: img.images.downsized_medium.url\r\n  }))\r\n\r\n  return gifs;\r\n}","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nconst useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  })\r\n\r\n  useEffect(() => {\r\n    getGifs(category)\r\n    .then(data => setState({ data, loading: false }));\r\n  }, [category])\r\n\r\n  return state;\r\n}\r\n\r\nexport default useFetchGifs\r\n","import React from 'react'\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport useFetchGifs from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n  const { data:images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n\r\n      { loading && <p>Loading</p> }\r\n\r\n      <div className=\"card-grid\">\r\n          {\r\n            images.map(img => (\r\n              <GifGridItem key={img.id} {...img} />\r\n            ))\r\n          }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GifGrid\r\n","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(['One punch Man']);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr/>\r\n\r\n      <ol>\r\n        {\r\n          categories.map(category => (\r\n            <GifGrid key={category} category={category} />\r\n          ))\r\n        }\r\n      </ol>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render( <GifExpertApp />,document.getElementById('root') );\n"],"sourceRoot":""}